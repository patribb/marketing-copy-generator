import { useState } from "react";
import type { NextPage } from "next";
import Head from "next/head";
import { toast } from "react-toastify";
import { MoonLoader } from "react-spinners";

const Home: NextPage = () => {
  const [input, setInput] = useState("");
  const [loading, setLoading] = useState(false);
  const [suggestion, setSuggestion] = useState("");

  const submit = async (e: { preventDefault: () => void }) => {
    e.preventDefault();
    if (!input) {
      toast.error("El tema no puede ir vacÃ­o ðŸ˜…", {
        position: toast.POSITION.TOP_CENTER,
        autoClose: 3000,
      });
      return;
    }
    if (input.length > 30) {
      toast.error("No debes superar los 30 caracteres ðŸ˜…", {
        position: toast.POSITION.TOP_CENTER,
        autoClose: 3000,
      });
      return;
    }
    setLoading(true);
   try {
    const res = await fetch("/api/marketing-copy", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({ input }),
    });
    const suggestion: string = await res.json();
    setSuggestion(suggestion);
    setInput("");
    toast.success("Enviado ðŸš€", {
      position: toast.POSITION.TOP_CENTER,
      autoClose: 2000,
    });
    setLoading(false);
   } catch (error) {
    console.log(error);
    setLoading(false);
   }
  };

  return (
    <div>
      <Head>
        <title>Marketing Copy Project</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="max-w-7xl mx-auto py-10">
        <h2 className="text-2xl font-black text-center text-gray-600 pb-3">
          Marketing &copy;Copy Generator
        </h2>
        {/* input field for marketing copy */}
        <div className="flex flex-col justify-center w-full px-3 md:px-0 md:w-1/3 mx-auto mt-10 gap-4">
          <div className="relative w-full">
            <textarea
              rows={3}
              placeholder="Introduce tu tema aquÃ­..."
              className="border-b-2 border-gray-300 bg-white p-4 rounded-lg text-xs focus:outline-none resize-none w-full"
              value={input}
              onChange={(e) => setInput(e.target.value)}
            />
            {/* characters limit */}
            <div
              className={`absolute bottom-3 right-2 ${
                input.length > 30 ? "text-red-500" : "text-cyan-400"
              } text-xs`}
            >
              <span>{input.length}</span>/30
            </div>
          </div>
          <button
            onClick={submit}
            className="bg-cyan-500 hover:bg-cyan-600 text-white font-extrabold py-2 px-4 rounded"
          >
            {loading ? (
            <div className="flex gap-2 items-center justify-center"><MoonLoader size={20} /><p>Cargando...</p></div>
            )
             : "Generar"}
          </button>
          {/* output field for marketing copy */}
          {suggestion && <div className="mt-9">
            <h3 className="font-extrabold mb-3 text-gray-600">Tu copia para marketing:</h3>
            <div className="relative w-full mt-5 rounded-md bg-gray-100 p-4">
              <p className="text-sm text-gary-700">{suggestion}</p>
            </div>
          </div>}
        </div>
      </div>
    </div>
  );
};

export default Home;
